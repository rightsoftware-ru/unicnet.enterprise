networks:
  unicnet_network:
    driver: bridge
    external: true
services:
  unicnet.postgres:
    container_name: unicnet.postgres
    image: postgres:alpine3.15
    restart: unless-stopped
    command: >
      postgres
      -c max_connections=50
      -c shared_buffers=1GB
      -c effective_cache_size=4GB
      -c work_mem=16MB
      -c maintenance_work_mem=512MB
      -c random_page_cost=1.1
      -c temp_file_limit=10GB
      -c log_min_duration_statement=200ms
      -c idle_in_transaction_session_timeout=10s
      -c lock_timeout=1s
      -c statement_timeout=60s
      -c shared_preload_libraries=pg_stat_statements
      -c pg_stat_statements.max=10000
      -c pg_stat_statements.track=all      
    env_file:
      - ".env"
    networks:
      unicnet_network:
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    deploy:
      resources:
        limits:
          cpus: "1"
          memory: 4G

  unicnet.postgres.exporter:
    container_name: unicnet.postgres.exporter
    image: prometheuscommunity/postgres-exporter:v0.10.0
    restart: unless-stopped
    env_file:
      - ".env"
    networks:
      unicnet_network:
    ports:
      - "9187:9187"
    volumes:
      - ./queries.yaml:/etc/postgres_exporter/queries.yaml:ro
    deploy:
      resources:
        limits:
          cpus: "0.2"
          memory: 500M
    depends_on:
      - unicnet.postgres


  unicnet.mongo:
    container_name: unicnet.mongo
    image: mongo:4.4
    restart: always
    env_file:
      - ".env"
    ports:
      - 27017:27017
    volumes:
      - mongodb_data_container:/data/db
    networks:
      unicnet_network:
    healthcheck:
      test: ["CMD", "mongo", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 5
  unicnet.rabbitmq:
    container_name: unicnet.rabbitmq
    image: "rabbitmq:3.10.7-management"
    restart: always
    env_file:
      - ".env"
    networks:
      unicnet_network:
    ports:
      - "5672:5672" # Main AMQP(TCP) port
      - "15672:15672" # Web UI (HTTP)
      - "15692:15692" # Prometheus metrics (HTTP)
      - "4369:4369" # Erlang Port Mapper Daemon (EPMD) - Поиск соседних узлов RabbitMQ
      - "25672:25672" # RabbitMQ Cluster communication port
    volumes:
      - ./rabbit/rabbit-unicomm.conf:/etc/rabbitmq/rabbitmq.config
    depends_on:
      - unicnet.postgres
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 30s
      retries: 3

  unicnet.keycloak:
    container_name: unicnet.keycloak
    image: bitnami/keycloak:22.0.5
    restart: unless-stopped
    env_file:
      - ".env"
    networks:
      unicnet_network:
    ports:
      - "8095:8080"
      - "8096:8443"
      - "9990:9990"
    depends_on:
      - unicnet.postgres


  unicnet.backend:
    container_name: unicnet.backend
    image: ${REPO_ADR}/${REPO_BACK}
    restart: unless-stopped
    env_file:
      - ".env"
    networks:
      unicnet_network:
    ports:
      - "30111:8080"
    depends_on:
      unicnet.mongo:
         condition: service_healthy
      unicnet.rabbitmq:
         condition: service_healthy

  unicnet.frontend:
    container_name: unicnet.frontend
    image: ${REPO_ADR}/${REPO_FRNT}
    restart: unless-stopped
    env_file:
      - ".env"
    networks:
      unicnet_network:
    ports:
      - "8080:8080"
      - "8081:8081"
    depends_on:
      - unicnet.backend
volumes:
  mongodb_data_container:

