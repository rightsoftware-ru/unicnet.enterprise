version: "3"
services:
  rabbitmq.unicomm:
    image: "rabbitmq:3.10.7-management"
    container_name: rabbitmq_unicomm
    restart: always
    ports:
      - "15672:15672"
      - "5672:5672"
      - "4369:4369"
      - "25672:25672"
    volumes:
      - ./rabbit/rabbit-unicomm.conf:/etc/rabbitmq/rabbitmq.config
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER} 
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS} 
    env_file:
      - ".env"
    networks:
      - unicnet_network
    depends_on:
      - postgres
  postgres:
    container_name: postgres
    image: postgres:alpine3.15
    command:
      - "postgres"
      - "-c"
      - "max_connections=50"
      - "-c"
      - "shared_buffers=1GB"
      - "-c"
      - "effective_cache_size=4GB"
      - "-c"
      - "work_mem=16MB"
      - "-c"
      - "maintenance_work_mem=512MB"
      - "-c"
      - "random_page_cost=1.1"
      - "-c"
      - "temp_file_limit=10GB"
      - "-c"
      - "log_min_duration_statement=200ms"
      - "-c"
      - "idle_in_transaction_session_timeout=10s"
      - "-c"
      - "lock_timeout=1s"
      - "-c"
      - "statement_timeout=60s"
      - "-c"
      - "shared_preload_libraries=pg_stat_statements"
      - "-c"
      - "pg_stat_statements.max=10000"
      - "-c"
      - "pg_stat_statements.track=all"
    environment:
       POSTGRES_DB: ${POSTGRES_DB} 
       POSTGRES_USER: ${POSTGRES_USER} 
       POSTGRES_PASSWORD: ${POSTGRES_PASSWORD} 
       PGDATA: "/var/lib/postgresql/data/pgdata"
    env_file:
      - ".env"
    volumes:
      - .:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: "1"
          memory: 4G
    networks:
      - unicnet_network

  postgres_exporter:
    container_name: exporter_container
    image: prometheuscommunity/postgres-exporter:v0.10.0
    environment:
      DATA_SOURCE_URI: "postgres:5432/${POSTGRES_DB}?sslmode=disable"
      DATA_SOURCE_USER: ${POSTGRES_USER}
      DATA_SOURCE_PASS: ${POSTGRES_PASSWORD}
      PG_EXPORTER_EXTEND_QUERY_PATH: "/etc/postgres_exporter/queries.yaml"
    env_file:
      - ".env"
    volumes:
      - ./queries.yaml:/etc/postgres_exporter/queries.yaml:ro
    ports:
      - "9187:9187"
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: "0.2"
          memory: 500M
    networks:
      - unicnet_network
    depends_on:
      - postgres

  mongodb_container:
    container_name: un.mongo.solid
    restart: always
    image: mongo:4.4
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_INITDB_DATABASE}
    env_file:
      - ".env"
    ports:
      - 27017:27017
    volumes:
      - mongodb_data_container:/data/db
    networks:
      - unicnet_network

  keycloak:
    container_name: unicnet_keycloak
    image: bitnami/keycloak:22.0.5
    environment:
      KEYCLOAK_USER: ${KEYCLOAK_USER}
      KEYCLOAK_PASSWORD: ${KEYCLOAK_PASSWORD}
      KEYCLOAK_ADMIN: ${KEYCLOAK_ADMIN}
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD}
      KEYCLOAK_DATABASE_HOST: postgres
      KEYCLOAK_DATABASE_PORT: 5432
      KEYCLOAK_DATABASE_NAME: ${KEYCLOAK_DATABASE_USER}
      KEYCLOAK_DATABASE_USER: ${KEYCLOAK_DATABASE_USER}
      KEYCLOAK_DATABASE_PASSWORD: ${KEYCLOAK_DATABASE_PASSWORD}
      KEYCLOAK_DATABASE_SCHEMAL: "public"
      KEYCLOAK_JDBC_PARAMS: "sslmode=disable&connectTimeout=30000"
      # Dev Configuration in order to access in HTTP mode
      KEYCLOAK_HOSTNAME_STRICT: "false"
      #deactivate fixed hostname
      KEYCLOAK_HOSTNAME_STRICT_HTTPS: "false"
      #For local access to console admin in start mode
      KEYCLOAK_HTTP_ENABLED: "true"
    env_file:
      - ".env"
    ports:
      - "8095:8080"
      - "8096:8443"
      - "9990:9990"
    restart: unless-stopped
    networks:
      - unicnet_network
    depends_on:
      - postgres
  unicnet.solid.core:
    image: cr.yandex/crpi5ll6mqcn793fvu9i/unicnet.solid/prod:back241127
    container_name: unicnet.solid
    ports:
      - "30111:8080"
    env_file:
      - "./unicnet.solid.env"
    restart: unless-stopped
    networks:
      - unicnet_network
    depends_on:
      - keycloak
      - mongodb_container
  uniwebui:
    image: cr.yandex/crpi5ll6mqcn793fvu9i/unicnet.solid/prod:front241127
    environment:
      Uc.BackHost: http://${Uc.BackHost}:30111/ #Адрес swagger (def: http://{Uc.BackHost}:30111/)
      Uc.BackHostSW: http://${Uc.BackHostSW}:30111/swagger/index.html #Адрес swagger web (def: {Uc.BackHostSW}swagger/index.html)
      Uc.BackHostKC: http://${Uc.BackHostKC}:8095/  #Адрес KeyCloak (def: http://{Uc.BackHostKC}:8095/)
      Uc.BackHostRMQ: http://${Uc.BackHostRMQ}:15672/#/queue #Адрес rabbitMQ (def: http://{Uc.BackHostKC}:15672/#/queue
      Uc.BackIp: $${Uc.BackIp} #ваш адрес сервера



    env_file:
      - ".env"
    ports:
      - "8080:8080"
      - "8081:8081"
    restart: unless-stopped
    networks:
      - unicnet_network
volumes:
  mongodb_data_container:

networks:
  unicnet_network:
    driver: bridge
    external: true

